     1                                  %include    "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> struc drive
    18 00000000 <res 00000002>      <1>         .no         resw    1                   ;ドライブ番号
    19 00000002 <res 00000002>      <1>         .cyln       resw    1                   ;シリンダ
    20 00000004 <res 00000002>      <1>         .head       resw    1                   ;ヘッド
    21 00000006 <res 00000002>      <1>         .sect       resw    1                   ;セクタ
    22                              <1> endstruc
     2                                  %include    "../include/define.s"
     1                              <1> BOOT_LOAD       equ     0x7C00                  ;ブートプログラムのロード位置
     2                              <1> 
     3                              <1> BOOT_SIZE       equ     (1024 * 8)              ;ブートコードのサイズ
     4                              <1> SECT_SIZE       equ     (512)                   ;セクタサイズ
     5                              <1> BOOT_SECT       equ     (BOOT_SIZE / SECT_SIZE) ;ブートプログラムのセクタ数
     3                                  
     4                                          ORG     BOOT_LOAD                       ;ロードアドレスをアセンブラに指示
     5                                  
     6                                  entry:                                          ;エントリポイント
     7 00000000 EB58                            jmp     ipl                             ;IPLへジャンプ
     8                                  
     9 00000002 90<rept>                        times   90 - ($ - $$) db 0x90           ;BPB(BIOS Parameter Block)
    10                                          
    11                                  ipl:                                            ;IPL(Initial Program Loader)
    12 0000005A FA                              cli                                     ;割り込み禁止
    13                                  
    14 0000005B B80000                          mov     ax, 0x0000
    15 0000005E 8ED8                            mov     ds, ax
    16 00000060 8EC0                            mov     es, ax
    17 00000062 8ED0                            mov     ss, ax
    18 00000064 BC007C                          mov     sp, BOOT_LOAD
    19                                  
    20 00000067 FB                              sti                                     ;割り込み許可
    21 00000068 8816[BA00]                      mov     [BOOT + drive.no], dl           ;ブートドライブを保存
    22                                  
    23 0000006C 68[9900]E8500083C4-             cdecl   puts, .s0                       ;文字列の表示
    23 00000074 02                 
    24                                  
    25 00000075 BB0F00                          mov     bx, BOOT_SECT - 1               ;BXに残りのブートセクタ数を代入
    26 00000078 B9007E                          mov     cx, BOOT_LOAD + SECT_SIZE       ;CXに次のブートアドレスを代入
    27                                  
    28 0000007B 515368[BA00]E89D00-             cdecl   read_chs, BOOT, bx, cx          ;read_chsの返り値はAXレジスタに保存される
    28 00000083 83C406             
    29                                  
    30 00000086 39D8                            cmp     ax, bx
    31 00000088 740C                    .10Q:   jz      .10E                            ;セクタ読み込みに失敗した場合はエラーメッセージを表示
    32 0000008A 68[A600]E8320083C4-     .10T:   cdecl   puts, .e0
    32 00000092 02                 
    33 00000093 E84B00                          call    reboot
    34                                  .10E:
    35                                  
    36 00000096 E96701                          jmp     stage_2                         ;ブート処理を第二段階に移行
    37                                  
    38 00000099 626F6F74696E672E2E-     .s0     db "booting...", 0x0A, 0x0D, 0          ;データ定義
    38 000000A2 2E0A0D00           
    39 000000A6 4572726F723A207365-     .e0     db "Error: sector read", 0
    39 000000AF 63746F722072656164-
    39 000000B8 00                 
    40                                  
    41 000000B9 00                      ALIGN 2, db 0
    42                                  BOOT:
    43                                      istruc  drive                               ;ブートドライブに関する情報
    44 000000BA 0000                            at  drive.no,       dw 0                ;ドライブ番号
    45 000000BC 0000                            at  drive.cyln,     dw 0                ;C: シリンダ
    46 000000BE 0000                            at  drive.head,     dw 0                ;H: ヘッド
    47 000000C0 0200                            at  drive.sect,     dw 2                ;S: セクタ
    48                                      iend        
    49                                  
    50                                  %include    "../modules/real/puts.s"
     1                              <1> puts:
     2 000000C2 55                  <1>         push    bp                              ;スタックフレームの構築
     3 000000C3 89E5                <1>         mov     bp, sp
     4                              <1> 
     5 000000C5 50                  <1>         push    ax                              ;レジスタの保存
     6 000000C6 53                  <1>         push    bx
     7 000000C7 56                  <1>         push    si
     8                              <1> 
     9 000000C8 8B7604              <1>         mov     si, [bp + 4]                    ;SIに文字列のアドレスを代入
    10                              <1> 
    11 000000CB B40E                <1>         mov     ah, 0x0E                        ;テレタイプ式で1文字出力
    12 000000CD BB0000              <1>         mov     bx, 0x0000                      ;ページ番号と文字色を0に設定
    13 000000D0 FC                  <1>         cld                                     ;DFに0を代入しアドレスを加算
    14                              <1> 
    15                              <1> .10L:
    16 000000D1 AC                  <1>         lodsb
    17                              <1> 
    18 000000D2 3C00                <1>         cmp     al, 0                           ;ALが0である場合break、そうでない場合は文字を出力して.10Lの先頭に戻る
    19 000000D4 7404                <1>         je      .10E
    20                              <1> 
    21 000000D6 CD10                <1>         int     0x10
    22 000000D8 EBF7                <1>         jmp     .10L
    23                              <1> .10E:
    24                              <1> 
    25 000000DA 5E                  <1>         pop     si                              ;レジスタの復帰
    26 000000DB 5B                  <1>         pop     bx
    27 000000DC 58                  <1>         pop     ax
    28                              <1> 
    29 000000DD 89EC                <1>         mov     sp, bp                          ;スタックフレームの破棄
    30 000000DF 5D                  <1>         pop     bp
    31                              <1> 
    32 000000E0 C3                  <1>         ret
    51                                  %include    "../modules/real/reboot.s"
     1                              <1> reboot:
     2 000000E1 68[FD00]E8DBFF83C4- <1>         cdecl   puts, .s0                       ;再起動メッセージを表示
     2 000000E9 02                  <1>
     3                              <1> 
     4                              <1> .10L:
     5 000000EA B410                <1>         mov     ah, 0x10                        ;キー入力待ち
     6 000000EC CD16                <1>         int     0x16                            ;キー入力のBIOSコール
     7                              <1> 
     8 000000EE 3C20                <1>         cmp     al, ' '                         ;ALが「 」であったときにbreakする
     9 000000F0 75F8                <1>         jne     .10L
    10                              <1> 
    11 000000F2 68[1B01]E8CAFF83C4- <1>         cdecl   puts, .s1                       ;改行
    11 000000FA 02                  <1>
    12                              <1> 
    13 000000FB CD19                <1>         int     0x19                            ;再起動のBIOSコール
    14                              <1> 
    15 000000FD 0A0D50757368205350- <1> .s0     db  0x0A, 0x0D, "Push SPACE key to reboot...", 0
    15 00000106 414345206B65792074- <1>
    15 0000010F 6F207265626F6F742E- <1>
    15 00000118 2E2E00              <1>
    16 0000011B 0A0D0A0D00          <1> .s1     db  0x0A, 0x0D, 0x0A, 0x0D, 0
    52                                  %include    "../modules/real/read_chs.s"
     1                              <1> read_chs:
     2 00000120 55                  <1>         push    bp                              ;スタックフレームの構築
     3 00000121 89E5                <1>         mov     bp, sp
     4 00000123 6A03                <1>         push    3                               ;リトライ回数
     5 00000125 6A00                <1>         push    0                               ;読み込みセクタ数
     6                              <1> 
     7 00000127 53                  <1>         push    bx                              ;レジスタの保存
     8 00000128 51                  <1>         push    cx
     9 00000129 52                  <1>         push    dx
    10 0000012A 06                  <1>         push    es
    11 0000012B 56                  <1>         push    si
    12                              <1> 
    13 0000012C 8B7604              <1>         mov     si, [bp + 4]                    ;処理の開始
    14                              <1> 
    15 0000012F 8A6C02              <1>         mov     ch, [si + drive.cyln + 0]       ;CHにシリンダ番号(下位バイト)を代入
    16 00000132 8A4C03              <1>         mov     cl, [si + drive.cyln + 1]       ;CLにシリンダ番号(上位バイト)を代入
    17 00000135 C0E106              <1>         shl     cl, 6                           ;CLを6ビット左にシフト
    18 00000138 0A4C06              <1>         or      cl, [si + drive.sect]           ;CLとセクタ番号のor演算
    19                              <1> 
    20 0000013B 8A7404              <1>         mov     dh, [si + drive.head]           ;DHにヘッド番号を代入
    21 0000013E 8A14                <1>         mov     dl, [si + 0]                    ;DLにドライブ番号を代入
    22 00000140 B80000              <1>         mov     ax, 0x0000                      ;AXに0x0000を代入
    23 00000143 8EC0                <1>         mov     es, ax                          ;ESにセグメントを代入
    24 00000145 8B5E08              <1>         mov     bx, [bp + 8]                    ;BXにコピー先を代入
    25                              <1> 
    26                              <1> .10L:
    27 00000148 B402                <1>         mov     ah, 0x02                        ;AHに読み込み命令を代入
    28 0000014A 8A4606              <1>         mov     al, [bp + 6]                    ;ALにセクタ数を代入
    29                              <1> 
    30 0000014D CD13                <1>         int     0x13
    31 0000014F 7304                <1>         jnc     .11E
    32                              <1> 
    33 00000151 B000                <1>         mov     al, 0
    34 00000153 EB0C                <1>         jmp     .10E
    35                              <1> .11E:
    36                              <1> 
    37 00000155 3C00                <1>         cmp     al, 0
    38 00000157 7508                <1>         jne     .10E
    39                              <1> 
    40 00000159 B80000              <1>         mov     ax, 0
    41 0000015C FF4EFE              <1>         dec     word [bp - 2]
    42 0000015F 75E7                <1>         jnz     .10L
    43                              <1> .10E:
    44 00000161 B400                <1>         mov     ah, 0                           ;ステータス情報は破棄
    45                              <1> 
    46 00000163 5E                  <1>         pop     si                              ;レジスタの復帰
    47 00000164 07                  <1>         pop     es
    48 00000165 5A                  <1>         pop     dx
    49 00000166 59                  <1>         pop     cx
    50 00000167 5B                  <1>         pop     bx
    51                              <1> 
    52 00000168 89EC                <1>         mov     sp, bp                          ;スタックフレームの破棄
    53 0000016A 5D                  <1>         pop     bp
    54                              <1> 
    55 0000016B C3                  <1>         ret
    53                                  
    54 0000016C 00<rept>                        times   510 - ($ - $$) db 0x00          ;ブートフラグ(先頭512バイトの終了)
    55 000001FE 55AA                            db 0x55, 0xAA
    56                                  
    57                                  stage_2:                                        ;ブート処理の第二段階
    58 00000200 68[0B02]E8BCFE83C4-             cdecl   puts, .s0
    58 00000208 02                 
    59                                  
    60 00000209 EBFE                            jmp     $                               ;処理の終了
    61                                  
    62 0000020B 326E64207374616765-     .s0     db "2nd stage...", 0x0A, 0x0D, 0
    62 00000214 2E2E2E0A0D00       
    63                                  
    64 0000021A 00<rept>                        times   BOOT_SIZE - ($ - $$)   db 0    ;パディング(8KB)
